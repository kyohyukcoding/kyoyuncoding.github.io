TODO:
1. Add example messages to each of the sliders if they are being hovered over.
2. Make it so that the seed track and the parameters are shown in the table as well.
3. Make "copy to clipboard" button functional as well.
4. Make it so that the buttons and stuff all work in safari as well.
5. Refactor CSS file!

DONE:
1. Make the table reset each time the request is made.
2. Add a number which changes based on the value of the sliders next to the values.
3. Maybe remove the number of songs input so that it just creates you a playlist easily rather than having to faff about with how many songs you want on a playlist.
4. Add the range parameters to the API request.
5. Make design responsive for mobile and desktop.
6. Add error handling to the API code. Make sure that it gives a warning or error code if the URI is incorrect, or if the formatting is wrong.
7. Add buttons next to the range sliders which can disable the range sliders from working.
8. Make it so that when I disable a parameter, it doesn't include it from the query.
9. Add all artist names to the table as well.
10. Refactor everything nicely into separate CSS and JS files. Perhaps refactor code into modular functions, focus on DRY principles.
11. Commenting JS code.
12. Make little pods for each coding project.

LEARNT:
1. Use 'innerHTML = ""' to clear the child elements of a HTML element.
2. To set the colSpan of a <th> or <td> element, just do "element.Colspan = x".
3. To create a slider input, do <input type="range">.
4. To change an element whilst something is being activated useoninput="alert('clicked!')".
5. Altering the value of an html element only works if it is an input, form, textarea, select etc (editable).
6. Use innerhtml to change the actual html of the element, use textContent to just change the text inside an element. textContent is faster and safer.
7. Use the 'disabled' attribute to disable an input element.
8. Use a lookup object instead of ternary operators to assign variable names.
9. Flex and Grid only work on container elements, rather than single inline elements.
10. Use the ".join()" method to join elements of an array based on a delimiter.
11. You can target the children of elements with CSS by putting their name after the first element. For example, like .project-pod .project-image {background-color: blue;}. This will turn the project image class element blue if it is within a project-pod element.
12. Use the transform property to change the position of things by Y or X axis.
13. To get everything in the grid to stack on mobile view, just set the number of columns to 1, so everything is stacked vertically.
14. Use "column-gap: x;" to set a minimum gap between grid columns.
15. Sometimes the Safari Web Browser doesn't like input elements, so used a button element rather than an input element.